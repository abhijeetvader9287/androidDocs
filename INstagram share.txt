package com.twigsoftwares.urbanx.activities;
import android.content.ActivityNotFoundException;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.content.pm.ResolveInfo;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Rect;
import android.graphics.Typeface;
import android.graphics.drawable.BitmapDrawable;
import android.net.Uri;
import android.os.Build;
import android.os.Bundle;
import android.provider.MediaStore;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;

import com.facebook.FacebookSdk;
import com.facebook.share.model.AppInviteContent;
import com.facebook.share.widget.AppInviteDialog;
import com.twigsoftwares.urbanx.R;
import com.twigsoftwares.urbanx.support.communication.ViewMemoryCleanupUtility;

import net.hockeyapp.android.CrashManager;

import java.util.List;
public class InvitePeopleActivity extends AppCompatActivity {
    LinearLayout contactnumberlayout;
    LinearLayout emaillayout;
    Button whatsapplayout;
    ImageButton btnFacebook;
    AppCompatActivity thisActivity;
    String InviteContent;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.invitepeople);
        thisActivity = this;
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        TextView textviewTitle = (TextView) toolbar.findViewById(R.id.title);
        textviewTitle.setText(R.string.titleInvitePeople);
        ImageButton backBtn = (ImageButton) toolbar.findViewById(R.id.BackButton);
        ImageButton nextBtn = (ImageButton) toolbar.findViewById(R.id.NextButton);
        ImageButton settingBtn = (ImageButton) toolbar.findViewById(R.id.SettingButton);
        ImageButton searchBtn = (ImageButton) toolbar.findViewById(R.id.searchButton);
        ImageButton cancelBtn = (ImageButton) toolbar.findViewById(R.id.CancelButton);
        ImageButton saveBtn = (ImageButton) toolbar.findViewById(R.id.SaveButton);
        ImageButton deleteBtn = (ImageButton) toolbar.findViewById(R.id.DeleteButton);
        ImageButton DotsBtn = (ImageButton) toolbar.findViewById(R.id.ThreeDotsBtn);
        FacebookSdk.sdkInitialize(getApplicationContext());
        DotsBtn.setVisibility(View.GONE);
        deleteBtn.setVisibility(View.GONE);
        backBtn.setVisibility(View.GONE);
        nextBtn.setVisibility(View.GONE);
        settingBtn.setVisibility(View.GONE);
        searchBtn.setVisibility(View.GONE);
        cancelBtn.setVisibility(View.GONE);
        saveBtn.setVisibility(View.GONE);
        setSupportActionBar(toolbar);
        contactnumberlayout = (LinearLayout) findViewById(R.id.ContactSms);
        contactnumberlayout.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                sendsms();
            }
        });
        emaillayout = (LinearLayout) findViewById(R.id.ContactEmail);
        InviteContent = getResources().getString(R.string.InviteContents);
        emaillayout.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                sendEmail();
            }
        });
        Button btnInstagram = (Button) findViewById(R.id.btnInstagram);
        btnInstagram.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                invitefromInstagram();
            }
        });
        Button btnTwitter = (Button) findViewById(R.id.btnTwitter);
        btnTwitter.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                invitefromTwitter();
            }
        });
        whatsapplayout = (Button) findViewById(R.id.whatsappbtn);
        whatsapplayout.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                invitefromwhatsapp();
            }
        });
        btnFacebook = (ImageButton) findViewById(R.id.btnFacebook);
        btnFacebook.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String appLinkUrl, previewImageUrl;
                appLinkUrl = "https://fb.me/" + getResources().getString(R.string.facebook_app_id);
                previewImageUrl = "http://2.bp.blogspot.com/-99shOruuadw/VQsG2T233sI/AAAAAAAAEi0/noFTxUBh_rg/s1600/appscripts.png";
                AppInviteContent content = new AppInviteContent.Builder()
                        .setApplinkUrl(appLinkUrl)
                        .setPreviewImageUrl(previewImageUrl)
                        .build();
                AppInviteDialog.show(InvitePeopleActivity.this, content);
            }
        });
    }
    @Override
    protected void onActivityResult(final int requestCode, final int resultCode, final Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
    }
    //invite from whatsapp
    void invitefromwhatsapp() {
        Intent sendIntent = new Intent();
        sendIntent.setAction(Intent.ACTION_SEND);
        sendIntent.putExtra(Intent.EXTRA_TEXT, InviteContent);
        sendIntent.setType("text/plain");
        sendIntent.setPackage("com.whatsapp");
        PackageManager packManager = getPackageManager();
        List<ResolveInfo> resolvedInfoList = packManager.queryIntentActivities(sendIntent, PackageManager.MATCH_DEFAULT_ONLY);
        boolean resolved = false;
        for (ResolveInfo resolveInfo : resolvedInfoList) {
            if (resolveInfo.activityInfo.packageName.startsWith("com.whatsapp")) {
                sendIntent.setClassName(
                        resolveInfo.activityInfo.packageName,
                        resolveInfo.activityInfo.name);
                resolved = true;
                break;
            }
        }
        if (resolved) {
            startActivity(sendIntent);
        } else {
            Toast.makeText(InvitePeopleActivity.this, getResources().getString(R.string.whatsappnotinstalled), Toast.LENGTH_LONG).show();
        }
    }
    //invite from instagram
    void invitefromInstagram() {
        Intent sendIntent = new Intent();
        sendIntent.setAction(Intent.ACTION_SEND);
       sendIntent .putExtra(Intent.EXTRA_TEXT, InviteContent);
         Uri imageUri = Uri.parse("android.resource://" + getPackageName()
                + "/drawable/" + "ic_meet_icon");
        sendIntent.putExtra(Intent.EXTRA_STREAM,imageUri);
        /*String imageUri = MediaStore.Images.Media.insertImage(getContentResolver(), writeTextOnDrawable(R.drawable.ic_meet_icon ), "UrbanX Invitation", InviteContent);
        sendIntent.putExtra(Intent.EXTRA_TEXT, "sample");
        sendIntent.putExtra(Intent.EXTRA_TITLE, "sample");
        sendIntent.putExtra(Intent.EXTRA_STREAM, Uri.parse(imageUri));*/
        sendIntent.setType("image/jpeg");
        sendIntent.setPackage("com.instagram.android");
        sendIntent.setComponent(new ComponentName("com.instagram.android", "com.instagram.android.activity.ShareHandlerActivity"));//"/.activity.ShareHandlerActivity");
        startActivity(sendIntent);

    }
    //invite from twitter
    void invitefromTwitter() {
        Intent sendIntent = new Intent();
        sendIntent.setAction(Intent.ACTION_SEND);
        sendIntent.putExtra(Intent.EXTRA_TEXT, InviteContent);
        sendIntent.setType("text/plain");
        sendIntent.setPackage("com.twitter.android");
        PackageManager packManager = getPackageManager();
        List<ResolveInfo> resolvedInfoList = packManager.queryIntentActivities(sendIntent, PackageManager.MATCH_DEFAULT_ONLY);
        boolean resolved = false;
        for (ResolveInfo resolveInfo : resolvedInfoList) {
            if (resolveInfo.activityInfo.packageName.startsWith("com.twitter.android")) {
                sendIntent.setClassName(
                        resolveInfo.activityInfo.packageName,
                        resolveInfo.activityInfo.name);
                resolved = true;
                break;
            }
        }
        if (resolved) {
            startActivity(sendIntent);
        } else {
            Toast.makeText(InvitePeopleActivity.this, getResources().getString(R.string.twitterAppnotinstalled), Toast.LENGTH_LONG).show();
        }
    }
    @Override
    public void onStart() {
        super.onStart();
    }
    @Override
    public void onStop() {
        super.onStop();
    }
    //TODO: IF SMS invite is working before release
    //to open SMS screen
    //invite from sms
    protected void sendsms() {
        String smsBody = InviteContent;
        if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.KITKAT) {
            Intent intent = new Intent(Intent.EXTRA_TEXT);
            //TODO: Check weather phone number is required or not in testing
            //intent.setData(Uri.parse("smsto:" + Uri.encode(phoneNumber)));
            intent.setData(Uri.parse("smsto:"));
            intent.putExtra("sms_body", smsBody);
            startActivity(intent);
        } else {
            Intent sendIntent = new Intent(Intent.ACTION_VIEW);
            sendIntent.putExtra("sms_body", smsBody);
            sendIntent.setType("vnd.android-dir/mms-sms");
            startActivity(sendIntent);
        }
    }
    //invite from mail
    protected void sendEmail() {
        Log.i("Send email", "");
        String[] TO = {""};
        String[] CC = {""};
        Intent emailIntent = new Intent(Intent.ACTION_SEND);
        emailIntent.setData(Uri.parse("mailto:"));
        emailIntent.setType("message/rfc822");
        emailIntent.putExtra(Intent.EXTRA_EMAIL, TO);
        emailIntent.putExtra(Intent.EXTRA_CC, CC);
        emailIntent.putExtra(Intent.EXTRA_SUBJECT, getResources().getString(R.string.InvitationFromUrbanX));
        emailIntent.putExtra(Intent.EXTRA_TEXT, InviteContent);
        try {
            startActivity(Intent.createChooser(emailIntent, getResources().getString(R.string.SendInvitation)));
            finish();
        } catch (ActivityNotFoundException ex) {
            Toast.makeText(InvitePeopleActivity.this, getResources().getString(R.string.noemailclientinstalled), Toast.LENGTH_SHORT).show();
        }
    }
    @Override
    public void onResume() {
        super.onResume();
        System.gc();
        // ... your own onResume implementation
        checkForCrashes();
    }
    @Override
    public void onDestroy() {
        super.onDestroy();
        //destroys all views which are no loger needed
        ViewMemoryCleanupUtility.unbindDrawables(findViewById(R.id.invitepeoplelayout));
        System.gc();
    }
    @Override
    public void onPause() {
        super.onPause();
        System.gc();
    }
    private void checkForCrashes() {
        CrashManager.register(this);
    }
    private Bitmap writeTextOnDrawable(int drawableId ) {
        Bitmap bm = BitmapFactory.decodeResource(getResources(), drawableId)
                .copy(Bitmap.Config.ARGB_8888, true);
        Typeface tf = Typeface.create("Helvetica", Typeface.NORMAL);
        Paint paint = new Paint();
        paint.setStyle(Paint.Style.FILL);
        paint.setColor(Color.WHITE);
        paint.setTypeface(tf);
        paint.setTextAlign(Paint.Align.CENTER);
        paint.setTextSize(convertToPixels(InvitePeopleActivity.this, 5));
        Rect textRect = new Rect();
       // paint.getTextBounds(text, 0, text.length(), textRect);
        Canvas canvas = new Canvas(bm);
        //If the text is bigger than the canvas , reduce the font size
        if (textRect.width() >= (canvas.getWidth() - 4))     //the padding on either sides is considered as 4, so as to appropriately fit in the text
            paint.setTextSize(convertToPixels(InvitePeopleActivity.this, 5));        //Scaling needs to be used for different dpi's
        //Calculate the positions
        int xPos = (canvas.getWidth() / 2) - 2;     //-2 is for regulating the x position offset
        //"- ((paint.descent() + paint.ascent()) / 2)" is the distance from the baseline to the center.
        int yPos = (int) ((canvas.getHeight() / 2) - ((paint.descent() + paint.ascent()) / 2));
      //  canvas.drawText(text, xPos, yPos, paint);
        BitmapDrawable bmd = new BitmapDrawable(getResources(), bm);
        Bitmap newbit;
        newbit = bmd.getBitmap();
        return newbit;
    }
    public static int convertToPixels(Context context, int nDP) {
        final float conversionScale = context.getResources().getDisplayMetrics().density;
        return (int) ((nDP * conversionScale) + 0.5f);
    }
}

